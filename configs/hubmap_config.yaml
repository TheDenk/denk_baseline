common:
  gpus:
  - 0
  task: 'binary'
  seed: 17
  batch_size: 32
  num_workers: 8
  epochs: 128

model:
  target: segmentation_models_pytorch.Unet
  params:
    encoder_name: efficientnet-b5
    classes: 1
    
criterions:
- target: segmentation_models_pytorch.losses.DiceLoss
  params:
    mode: binary
  weight: 0.3333333
  name: dice
- target: segmentation_models_pytorch.losses.JaccardLoss
  params:
    mode: binary
  weight: 0.3333333
  name: jaccard
- target: segmentation_models_pytorch.losses.TverskyLoss
  params:
    mode: binary
  weight: 0.3333333
  name: tversky

optimizers:
- target: torch.optim.Adam
  params:
    lr: 0.0015
  scheduler:
    target: pl_bolts.optimizers.lr_scheduler.LinearWarmupCosineAnnealingLR
    params:
      warmup_epochs: 32
      max_epochs: 128
      warmup_start_lr: 0.001
    additional:
      monitor: dice_valid
    # target: torch.optim.lr_scheduler.ReduceLROnPlateau
    # params:
    #   mode: max
    #   factor: 0.8
    #   patience: 10
    #   min_lr: 0.00000001
    #   verbose: false
    # additional:
    #   monitor: dice_valid
    
metrics:
- target: segmentation_models_pytorch.utils.metrics.IoU
  params:
    threshold: 0.5
  name: iou
- target: segmentation_baseline.metrics.DiceCoef
  params:
    threshold: 0.5
  name: dice

callbacks:
- target: pytorch_lightning.callbacks.LearningRateMonitor
- target: pytorch_lightning.callbacks.ModelCheckpoint
  params:
    filename: best-{epoch:02d}-{iou_valid:2.2f}-{dice_valid:2.2f}
    monitor: dice_valid
    mode: max
    save_top_k: 1
    save_last: true
    save_weights_only: true

datasets:
  train:
    target: segmentation_baseline.datasets.HubmapDataset
    params:
      img_h: 256
      img_w: 256
      labels:
      - 0
      - 1
      augs: segmentation_baseline.augs.HubmapTrainAugs
      images_dir: path_to_images
      masks_dir: path_to_masks
      csv_path: path_to_csv
  valid:
    target: segmentation_baseline.datasets.HubmapDataset
    params:
      img_h: 256
      img_w: 256
      labels:
      - 0
      - 1
      images_dir: path_to_images
      masks_dir: path_to_masks
      csv_path: path_to_csv

# loggers:
# - target: pytorch_lightning.loggers.TensorBoardLogger